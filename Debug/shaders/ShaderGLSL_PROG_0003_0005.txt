
//== PROGRAM LINK STATUS = TRUE
//== PROGRAM VALIDATE STATUS = FALSE

//======================================================
//   Vertex Shader 1 
//======================================================

//== SHADER COMPILE STATUS = TRUE
#version 330

uniform mat4 projection, modelview;
uniform vec2 texCoordDispl;

in vec2 position;
in vec2 texCoord;
out vec2 texCoordFrag;

void main()
{
	// Pass texture coordinates to access a given texture atlas
	texCoordFrag = texCoord + texCoordDispl;
	// Transform position from pixel coordinates to clipping coordinates
	gl_Position = projection * modelview * vec4(position, 0.0, 1.0);
}


//======================================================
//   Fragment Shader 2 
//======================================================

//== SHADER COMPILE STATUS = TRUE
#version 330

uniform vec4 color;
uniform sampler2D tex;


in vec2 texCoordFrag;
out vec4 outColor;

void main()
{
	// Discard fragment if texture sample has alpha < 0.5
	// otherwise compose the texture sample with the fragment's interpolated color
	vec4 texColor = texture(tex, texCoordFrag);
	if(texColor.a < 0.5f)
		discard;
	outColor = color * texColor;
}

